html
    head
        meta(charset="UTF-8")
        script(src=livereloadUrl)
        link(rel="stylesheet",href="app.css")
        script.
            function resizeIframe(obj) {
                 obj.style.height = obj.contentWindow.document.body.scrollHeight + 'px';
                 obj.style.width = obj.contentWindow.document.body.scrollWidth + 'px';
                   
            }
    body
        :markdown
            ## Immagini, atomi, colori e parole 
             
            Abbiamo visto come le parole siano essere codificate con sequenze di
            oggetti/elementi/simboli. Abbiamo visto che addirittura bastano due
            soli simboli diversi! La rappresentazione di un pezzo di informazione con solo due cifre
            si dice "digitale": probabilmente questo termine lo avete già
            sentito...

            Ora ci facciamo due domande (cerchiamo di espandere questa scoperta
            in due direzioni): 
                1. cos'altro, di interessante, può essere digitalizzato?
                2. che altri vantaggi dà la possibilità di digitalizzare la
                l'informazione, oltre a consentire di comunicarla a distanza?

            Cominciamo con la prima domanda, e chiediamoci: è possibile
            rappresentare digitalmente le immagini?
            
        hr

        :markdown
            Cominciamo con questa osservazione: se è possibile rappresentare
            un'immagine con del testo, siamo a cavallo: siccome il testo lo
            possiamo digitalizzare, possiamo fare così: prima trasformiamo
            l'immagine in testo, poi digitalizziamo il testo, et voilà!

            Si dice che un'immagine valga mille parole... 
            
            L'immagine di seguito, quante *lettere* vale?

            <iframe onload="javascript:resizeIframe(this)" src="monalisa.html" frameborder="0" seamless scrolling="yes"></iframe>

            [Risposta multipla: quante lettere contiene l'immagine?]

            Come vedete, l'immagine può essere "approssimata" utilizzando una
            "griglia", o "matrice" di lettere. Le lettere con più "inchiostro"
            possono essere utilizzate per le zone più scure.

            D'accordo, forse l'approssimazione non è proprio al livello
            dell'originale di Leonardo, ma non perdiamo la speranza.
            Inoltre, non ci sono i colori, ma per ora disinteressiamocene.

            Secondo te, come si potrebbe rendere l'approssimazione testuale più
            precisa, simile all'originale? 

            [Risposta multipla:
                1. Utilizzando più lettere dell'alfabeto fiorentino del '400
                2. Utilizzando più lettere, più piccole, più fitte
                3. Non c'è speranza: anche le lettere fossero grandi un
                millesimo di una capocchia di spillo, la differenza esisterebbe
                sempre.
            ]
            Risposta:
            Se possiamo utilizzare lettere piccole a piacere, possiamo ottenere
            la precisione che vogliamo nella definizione dei dettagli. Anche
            precisioni molto superiori a quelle che l'occhio umano può
            apprezzare/percepire.

        hr

        :markdown
            ## Pixels

            Ok, la monna lisa "a parole" dimostra una cosa: ogni immagine può
            essere rappresentata come una sequenza, come una matrice di elementi
            discreti, proprio come un testo! Questi elementi vengono chiamati
            "pixel" (dall'inglese "picture element", "elemento dell'immagine").
            "Digitalizzare" un'immagine vuol dire trovare la sequenza di
            elementi, che meglio approssimano l'immagine.  
            Un'immagine digitalizzata in questo modo è anche particolarmente
            facile da ricostruire: ad Atene, Leucippo, per ricostruire la nostra
            immagine non dovrebbe fare altro che scrivere in ordine le lettere
            che abbiamo trasmesso.

            A proposito di Democrito: questa rappresentazione delle immagini
            ricorda una teoria dirompente sulla natura, proposta dai vero
            Leucippo e Democrito la varietà di cose che vediamo è
            composta da minuscole particelle, che non cambiano mai, e che non
            possono essere divise in parti: gli atomi. Allora da
            dove viene tutto il cambiamento che esperiamo? Viene dal *movimento*
            degli atomi. Questa teoria è interessante per molte ragioni. Una di
            queste è che è la prima volta, nella storia dell'uomo, che si
            dice che esistono diversi "livelli" della realtà: in questo caso uno
            "microscopico", fatto di minuscole entità, che i sensi umani non
            riescono a percepire. I sensi umani percepiscono invece uno stato
            macroscopico, globale. Ovviamente, lo stato macroscopico è legato a
            quello microscopico a doppio filo: prima di tutto perché ne é
            determinato. 

            ## Pennelli e parole

            Ok, un'immagine può essere "digitalizzata", per essere trasmessa e
            ricostruita.
            Ma c'è un'altra possibilità interessante: "interagire" con
            l'immagine "agendo" direttamente sui pixel della sua rappresentazione
            digitale.

            Normalmente, come interagiamo con un'immagine? "Percettivamente" la
            vediamo come un'insieme di zone colorate più o meno omogeneamente
            etc.
            E se vogliamo modificarla? Uno strumento tipico è il pennello, con
            il quale tracciamo dei segni colorati.

            Alcune delle azioni che possiamo desiderare di fare su un'immagine
            sono complicate da eseguire, con un pennello.

            Ad esempio, immaginate di aver fatto questa foto:

        img(src="http://www.maximumpcguides.com/wp-content/uploads/2007/06/red-eye_effect.jpg")
        :markdown
            Quanto è facile/difficile, con un pennello, cambiare il colore agli
            occhi?
            Sarebbe utile avere la possibilità di agire sul singolo pixel!

            Ma facciamo un passo indietro, e consideriamo la rappresentazione
            *più semplice possibile* di un'immagine. Nella monna lisa cyberpunk
            ogni pixel poteva essere una lettera/simbolo. Come abbiamo fatto per
            le onde, chiediamoci: qual è il numero minimo di simboli diversi che
            servono per descrivere un'immagine?  Per le onde ne bastavano due.
            Proviamo questa scelta dicotomica anche per le immagini.  

            Se abbiamo solo due "tipi" di pixel, come li scegliamo? La cosa
            migliore sembrerebbe sceglierli "agli estremi": propongo quadratini
            bianchi e quadratini neri. 

            Cosa si può fare con una matrice di solo due tipi di elementi? 

            Ecco un esempio:

            <my-image data-data="smiley"></my-image>

            [mettere, di fianco una tabella che rappresenti i valori] 

            E' un sorriso, giusto? Ti propongo un esercizio: prova ad invertire
            lo smiley (cioè: prova a farlo sorridere verso destra).

            Probabilmente l'esercizio ti sarà sembrato facile...

            Ora, prova a "invertire" questo:

            [immagine molto grande e magari complessa da invertire]
            [questo esercizio dovrebbe introdurre l'intuizione che fare certe
            cose 'a mano' è difficile]

        hr
        :markdown
            Nell'esercizio precedente, abbiamo interagito con un'immagine
            digitalizzata.

            L'interazione era "manuale", nel senso che era basata su alcune
            nostre capacità sensoriali/motorie particolari, "umane":  "vedere" il pixel
            che vogliamo invertire, "muovere" il cursore fino a
            finirci sopra, "cliccare". Tipicamente, questo è il modo con cui
            interagiamo con gran parte della realtà, tutti i giorni (apriamo la
            porta girando la maniglia, accendiamo la luce premendo
            l'interruttore, etc).

            Una delle cose interessanti/devastanti della computer
            science/informatica/diffusione dei computer/whatever /ragione per
            imparare a usare i computer è questa:
            sempre più oggetti, o pezzi di *realtà*, fisica o virtuale che sia,
            offrono un'interfaccia di tipo diverso, *speciale*. Attraverso questa
            interfaccia, è possibile interagire con la realtà per fare cose 
            altrimenti impossibili/estremamente difficili/faticose. Nelle
            prossime unit
            vorrei mostrarvi questo, tra l'altro.

            Partiamo da un esempio semplice:
            consideriamo lo smiley digitale dell'esercizio precedente.

            Ora, però, invece di cliccare sui pixel, possiamo interagire
            scrivendo dei
            "comandi" nella casella di testo qui sotto, e poi chiedendo di
            eseguirli cliccando "esegui".

            I comandi hanno questa struttura:

            oggetto.comando(parametri)

            IL punto separa l'oggetto sul quale vogliamo agire dall'azione che
            vogliamo compiere. (Informazione sul "gergo tecnico": Questo è un
            formalismo molto diffuso nella categoria dei linguaggi per computer
                cosiddetti "ad oggetti".)

            Nel nostro caso, l'oggetto su cui vogliamo agire è l'immagine, che
            abbiamo chiamato "img"

            I comandi che hai a disposizione sono quindi:

                img.selectPixel(x,y) : "seleziona" il pixel alla riga x,
                colonna y, cioè: posiziona un "pennello virtuale" sopra quel
                pixel.
                Es: img.selectPixel(0,0): seleziona il pixel in alto a sinistra
                (riga 0, colonna 0)

                immagine.getPixel(): "mostra" il valore del pixel selezionato.
                Esempio:
                img.selectPixel(0,0)
                img.getPixel() mostra il valore 1 (bianco)

                immagine.setPixel(c): "dipinge" il pixel di nero (0) o di bianco (1)
                
                Esempio: img.selectPixel(7,7)
                    img.setPixel(0)
                    Annerisce il pixel in basso a destra

                Qualche esercizio: 
                    1) seleziona un punto del contorno della faccia
                    2) inverti il colore di un pixel qualunque 
                    3) cancella quel sorriso del cazzo a quello smiley della
                    minchia

            <iframe onload="javascript:resizeIframe(this)" frameborder="0" src="smiley-console.html"></iframe>

            Ok, hai visto un modo diverso di interagire con un'immagine. Magari
            ti stai chiedendo "che vantaggi mi porta"? Un po' di pazienza, lo
            scopriamo tra poco. Prima però, aggiungiamo qualche altro colore alla
            nostra tavolozza... 

            ## Grey is the new black (and white)

            Poter usare dei grigi gioverebbe molto alle nostre possibilità
            espressive. Dopotutto, è un po' quello che succedeva con la Monna
            Lisa, potendo scegliere lettere diverse, con più o meno inchiostro.
            Possiamo raffinare la nostra rappresentazione digitale di
            un'immagine considerando i grigi che dividono il nero dal bianco.
            Quante sfumature vogliamo considerare? Dipende, tra l'altro, da
            quanti bit vogliamo usare per ogni pixel. Se vogliamo usarne 8,
            quante sfumature potremo rappresentare?
            

            ( ) 2
            ( ) 4
            ( ) 7
            ( ) 100
            ( ) 800
            (o) 256

            Sono tanti o pochi, 256 grigi diversi? Scoprilo mettendoti alla
            prova, cercando di capire quale grigio è quello qui sotto:

            [Widget dell'indovinello sul grigio]

        hr
        :markdown
            Ok, ora tocca al colore. Come possiamo rappresentare il colore?
            Il colore che percepiamo è la somma di rosso verde blue. Bene, per
            ogni colore diciamo quanto rosso/verde/blu c'è: ci servono tre
            numeri! otto bit ciascuno -> 256 possibili valore per ciascuna
            componente. Perfetto! Mettiti alla prova: insegui il colore...


        hr
        :markdown
            Ok, ora torniamo alla nostra interfaccia a comandi...

            Cose che possiamo fare, in ordine crescente di difficoltà:

            1) scurire un pixel (composizione di funzioni)
            2) scurire tutta l'immagine (map)
            3) invertire l'immagine
            4) cambiare il bianco in rosso (condizione)


        hr

        :markdown
            Le immagini, che ci appaiono normalmente continue, possono essere
            rappresentate con tanti punti 

            

            E' il turno delle immagini!

            Si dice che un'immagine valga mille parole (le quali, a loro volta,
            sono pietre). Quindi, ogni immagine vale mille pietre. Ineccepibile,
            no?

            Se dovessimo trasmettere un'immagine ad Atene, come [[faremmo?]]

            Le immagini sembrano meno facili da descrivere con una sequenza
            discreta di simboli/onde/pietre/elementi.

            Nella storia dell'arte, tra le tante tecniche interessanti,
            consideriamo quella dei puntinisti, come Seurat: l'immagine è fatta
            da tanti elementi piccoli (punti), ciascuno di un colore uniforme.

            <img width="100%"
            src="http://upload.wikimedia.org/wikipedia/commons/9/96/Georges_Seurat_026.jpg"></img> 

            Ma il puntinismo non sembra riuscire a descrivere in modo fedele
            un'immagine *qualsiasi*, se guardiamo il quadro da vicino (da
            lontano, invece, i nostri sensi potrebbero confondere il quadro con
            la realtà). Perché? Forse perché i punti sono troppo
            *grossi*, se visti da sufficientemente vicino (se non ci credi, vai
            al museo dove è esposto sto minchia di quadro)...

            Cosa succederebbe se rendessimo i punti molto più piccoli?

            Puoi verificarlo prendendo una fotografia e guardandola attraverso
            una lente d'ingrandimento: vedrai dei puntini di colori omogenei.

            Quindi possiamo vedere un'immagine, qualsiasi immagine, come
            un'insieme di punti. Disposti come? Ma come una scacchiera!



            Gli esseri umani tipicamente interagiscono con le cose a livello
            macroscopico (esempi).
            Per esempio, la trasmissione del calore avviene per urti etc
            Uno dei superpoteri che la scienza e la tecnica hanno generato è la
            possibilità di agire *direttamente* sullo stato microscopico
            (*micro* sia in tempo che in spazio).

            E' quello che vedremo ora con le immagini: un'immagine la possiamo
            vedere come formata da tantissimi *pixel*.             
            
            I *pixel* sono gli "atomi" delle immagini, nel senso che sono
            "indivisibili": ognuno è un elemento di un solo colore. Di solito,
            noi non percepiamo i pixel (e non li *vogliamo* percepire, fatte
            salve alcune eccezioni, tipo i quadri di Seurat

            <img id="domenica" width="100%" src="imgs/sunday_seurat.jpg"></img>

            Il primo superpotere che ti è concesso è "sensoriale": puoi accedere
            ad un singolo pixel di un'immagine, e vedere *come è fatto* (cioè
            ingrandirlo). Verificherai che il suo
            colore è descrivibile con un numero, e potrai cambiare questo
            numero. Questo è un superpotere molto fico, ma presto sentirai
            l'esigenza di averne un altro: se vuoi fare qualcosa ad un'immagine,
            tipo cambiarne i colori, agire su ogni singolo pixel è palloso.
            Quello che ti piacerebbe poter fare è *chiedere a qualcuno di fare
            tante operazioni, velocemente, al posto tuo*! Ed è qui che il
            computer ti potrà aiutare di brutto...

            Cominciamo con un'immagine nella quale i pixel sono bene evidenti:

            <my-image data

            Prendiamo l'immagine qui sotto:


            In questo caso, ogni *pixel* può avere solo uno di due colori:
            bianco o nero. Quindi possiamo rappresentare ogni punto
            dell'immagine con un singolo bit (dovrebbe essere chiaro cosa è un
            bit dalla lezione sul testo e sulle onde).
            Volendo utilizzare dei numeri per rappresentare i bit potremmo
            utilizzare lo '0' e l' '1'.

            In questo modo, l'immagine è descritta dal numero corrispondente a
            ciascuna posizione.


            Ora introduciamo un superpotere: un linguaggio con il quale possiamo
            "interagire" con l'immagine.

            In che modo?

            Per prima cosa, questo linguaggio consente di "chidere" all'immagine
            quale colore ha un certo pixel.

            Si fa in questo modo:

                > coloreDelPixelIn(0,0)
                > -> 0

            Visto? Pazzesco, no?
            Possiamo ottenere delle informazioni su un pezzo di mondo!
            Notate una cosa importante: l'informazione che otteniamo è in una
            forma che sarebbe possibile facilmente "digitalizzare" ([introdurre
            assolutamente il concetto di digitalizzazione nella parte sul
            testo]). In particolare, l'informazione in questo caso è numerica:
            '1' se il pixel è nero, '0' se è bianco. Questo può essere
            ulteriormente comodo, come vedremo...

            Non è tutto: utilizzando sempre lo stesso "linguaggio", possiamo
            anche "modificare" l'immagine: possiamo cambiare il colore di un
            pixel:

                > coloraPixel(0,0,1)

            (colora il pixel in posizione 0,0 di nero)

            Bello, no?

            Riflettiamoci un attimo: possiamo *sentire* ed *agire* attraverso
            dei comandi con un pezzo di mondo!

            Bello, ma: non ci sono modi più facili? Tipo: potrebbe essere
            possibile "cliccare" "a mano" su un pixel e farlo cambiare colore. 

            Un po' di pazienza, e vedremo i vantaggi del nostro nuovo
            superpotere!

            Ora torniamo alla storia dell'arte: guarda questa "immagine": la
            riconosci?

            (pezzo di sunday seurat in grigio)

            (attività: interroga l'oggetto.
                - hai capito come sono codificati i pixel?
                - trova il punto più chiaro
                - trova il punto più scuro
            ) 

            <sub-img data-src="sunday_seurat.jpg" data-x="0" data-y="0"
            data-h="100" data-w="100"></sub-img> 

            <my-canvas></my-canvas>

        script(src="app.js")
